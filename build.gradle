
/**
 * https://guides.gradle.org/building-kotlin-jvm-libraries/
 */
buildscript {
  ext.kotlin_version = "1.3.72"

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
  }
}

plugins {
  id 'maven-publish'
  id 'com.github.ben-manes.versions' version '0.20.0'
  id 'com.jfrog.bintray' version '1.8.5'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

group 'io.github.announce'
version '1.0.0-RC1'

repositories {
  mavenCentral()
  jcenter()
}

configurations {
  ktlint
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  testImplementation 'junit:junit:4.12'
  ktlint "com.pinterest:ktlint:0.37.0"
}

dokka {
  outputFormat = 'html'
  outputDirectory = "$buildDir/javadoc"
}
javadoc.dependsOn dokka

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['mavenJava']

  pkg {
    repo = "enum-or-null"
    name = rootProject.name
    licenses = ['MIT']
    vcsUrl = 'https://github.com/announce/enum-or-null.git'

    version {
      name = project.version
      released = new Date()
      vcsTag = "v${project.version}"
    }
  }
}

task ktlint(type: JavaExec, group: "verification") {
  description = "Check Kotlin code style."
  classpath = configurations.ktlint
  main = "com.pinterest.ktlint.Main"
  args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
  description = "Fix Kotlin code style deviations."
  classpath = configurations.ktlint
  main = "com.pinterest.ktlint.Main"
  args "-F", "src/**/*.kt"
}

task sourcesJar(type: Jar, dependsOn: project.classes) {
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar, javadocJar
}

// Create the pom configuration:
def pomConfig = {
  licenses {
    license {
      name "The MIT License"
      url "https://opensource.org/licenses/MIT"
      distribution "repo"
    }
  }
  developers {
    developer {
      id "ymkjp"
      name "Kenta Yamamoto"
      email "ymkjp@jaist.ac.jp"
    }
  }

  scm {
    url "https://github.com/announce/enum-or-null"
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId group
      artifactId rootProject.name
      version version
      from components.java

      artifact sourcesJar {
        classifier = 'sources'
      }
      artifact javadocJar {
        classifier = 'javadoc'
      }

      pom.withXml {
        def root = asNode()
        root.appendNode('name', rootProject.name)
        root.appendNode('description', 'Provide a enumValueOrNull function')
        root.appendNode('url', 'https://github.com/announce/enum-or-null')
        root.children().last() + pomConfig
      }
    }
  }
}
