
/**
 * https://guides.gradle.org/building-kotlin-jvm-libraries/
 */
buildscript {
  ext.kotlin_version = "1.3.72"

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id 'maven-publish'
  id 'com.github.ben-manes.versions' version '0.20.0'
  id "org.jetbrains.dokka" version "1.7.20"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

group 'io.github.announce'
version '1.3.0'

repositories {
  mavenCentral()
  jcenter()
}

configurations {
  ktlint
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  testImplementation 'junit:junit:4.12'
  ktlint "com.pinterest:ktlint:0.37.0"
  dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.7.20")
}

task ktlint(type: JavaExec, group: "verification") {
  description = "Check Kotlin code style."
  classpath = configurations.ktlint
  main = "com.pinterest.ktlint.Main"
  args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
  description = "Fix Kotlin code style deviations."
  classpath = configurations.ktlint
  main = "com.pinterest.ktlint.Main"
  args "-F", "src/**/*.kt"
}

task sourcesJar(type: Jar, dependsOn: project.classes) {
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar, javadocJar
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = uri("https://maven.pkg.github.com/announce/enum-or-null")
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("OWNER_USERNAME")
        password = project.findProperty("gpr.key") ?: System.getenv("OWNER_TOKEN")
      }
    }
  }
  publications {
    gpr(MavenPublication) {
      from(components.java)
    }
  }
}
